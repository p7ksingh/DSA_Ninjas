Problem statement
You have been given two sorted arrays/lists(ARR1 and ARR2) of size N and M respectively, merge them into a third array/list such that the third array is also sorted.

Note:
Detailed explanation ( Input/output format, Notes, Images )
Constraints :
1 <= t <= 10^2
0 <= N <= 10^5
0 <= M <= 10^5
Time Limit: 1 sec 
Note:
Consider the case when size of the two arrays is not same.
Sample Input 1 :
1
5
1 3 4 7 11
4
2 4 6 13
Sample Output 1 :
1 2 3 4 4 6 7 11 13 
Sample Input 2 :
2
3
10 100 500
7
4 7 9 25 30 300 450
4
7 45 89 90
0
Sample Output 2 :
4 7 9 10 25 30 100 300 450 500
7 45 89 90



=========================================
Sample code -1

public class Merge2SortedArrays {
public static void printArray(int[]arr){
    int n=arr.length;
    for(int i=0;i<n;i++){
        System.out.println(arr[i]);
    }
}
public static int[] merge2SortedArrays(int[] arr1,int[]arr2){
    int m=arr1.length;
    int n=arr2.length;
    int[] arr=new int[m+n];
    int i=0;
    int j=0;
    int k=0;
    while(i<m && j<n){
        if(arr1[i]<=arr2[j]){
            arr[k]=arr1[i];
            i++;
            k++;
        }else{
            arr[k]=arr2[j];
            j++;
            k++;
        }
    }
    while(i<m){
        arr[k]=arr1[i];
        i++;
        k++;
    }
    while(j<n){
        arr[k]=arr2[j];
        j++;
        k++;
    }
    return arr;
}
    
public static void main(String args[]) {
    int arr1[]={1,4,8,10,13,17};
    int arr2[]={2,3,5,7,9,11,12};
    int arr3[]=merge2SortedArrays(arr1,arr2);
    printArray(arr3);
    }
}
============================================================
